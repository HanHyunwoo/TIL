exam[order(exam$math,exam$english,decreasing =T),]
exam <- read.csv('csv_exam.csv');
exam[order(exam$math,exam$english,decreasing =T),]
exam[order(exam$math,exam$english),]
test<-exam[order(exam$math,exam$english),]
test
test<-exam[order(exam$math,exam$english),]
exam
colnames(exam) <- c('id','class','math','english','science')
test<-exam[order(exam$math,exam$english),]
exam2 <- exam %>% arragnge(class,desc(math))
exam[order(exam$class,exam$math,decreasing =T),]
exam2 <- exam %>% arragnge(class,desc(math))
exam2 <- exam %>% arrange(class,desc(math))
exam3 <- exam %>% arrange(desc(math))
ex4 <- head(exam3,5)
ex4
exam <- read.csv('csv_exam.csv');
colnames(exam) <- c('id','class','math','english','science')
exam[order(exam$class,exam$math,decreasing =T),]
exam[order(exam$class,exam$math,decreasing =T),]
exam2 <- exam %>% arrange(class,desc(math))
exam3 <- exam %>% arrange(desc(math))
ex4 <- head(exam3,5)
exam2
exam3
exam2
#각 반 별 3과목 평균이 높은사람 순으로 정렬하시오.
exam$avg <- (exam$math+exam$english+exam$science)/3
exam
so <- exam %>% arrange(exam$avg)
so
exam$avg <- (exam$math+exam$english+exam$science)/3
exam
so <- exam %>% arrange(class,desc(avg))
exam4 <- exam %>% arrange(class,desc(avg))
exam4
so <- exam %>% arrange(desc(avg))
so
so <- exam %>% arrange(exam$avg)
so <- exam %>% arrange(class,exam$avg)
so
so <- exam %>% arrange(class,desc(exam$avg)
so
so <- exam %>% arrange(class,desc(exam$avg)
so
exam %>% arrange(class,desc(exam$avg)
so
so <- exam %>% arrange(class,desc(exam$avg))
so
exam$avg <- rowMeans(exam[,c(3:5)])
exam$avg
exam$avg
exam$avg
#각 반 별 3과목 평균이 높은사람 순으로 정렬하시오.
exam$avg <- (exam$math+exam$english+exam$science)/3
exam$avg
#각 반 별 3과목 평균이 높은사람 순으로 정렬하시오.
exam$avg <- (exam$math+exam$english+exam$science)/3
exam$avg
so <- exam %>% arrange(class,desc(exam$avg))
so <- exam %>% arrange(exam$avg)
so <- exam %>% arrange(class,desc(exam$avg))
so
exam4 <- exam %>% arrange(class,desc(avg))
exam4
exam %>% arrange(class,desc(exam$avg))
exam %>% filter(class=='audi')
exam <- read.csv('csv_exam.csv');
colnames(exam) <- c('id','class','math','english','science')
exam %>% filter(class=='audi')
filter(class=='audi')
exam
exam <- read.csv('csv_exam.csv');
colnames(exam) <- c('id','class','math','english','science')
exam
#----------------------------------------------------------------------
mpg %>% filter(class=='audi')
mpg
mpg
mpg
#----------------------------------------------------------------------
tmp <- mpg %>% filter(class=='audi')
tmp
mpg %>% filter(class=='audi')
tmp
mpg
mpg
#----------------------------------------------------------------------
tmp <- mpg %>% filter(mpg$manufacturer=='audi')
tmp
mpg
mpg
tmp
arrange(desc(tmp))
mpg %>% arrange(desc(tmp))
mpg %>% arrange(desc(tmp.hwy))
mpg %>% arrange(mpg$avg)
tmp %>% arrange(tmp$avg)
tmp %>% arrange(tmp$avg)
tmp
tmp %>% arrange(tmp$hwy)
tmp
tmp %>% arrange(hwy)
tmp
tmp %>% arrange(desc(hwy))
tmp
tmp %>% arrange(hwy)
head(temp,5)
tmp %>% arrange(hwy)
head()
head(tmp,5)
mpg
mpg2 <- mpg
mpg2$cty_hwy(SUM) <- mpg$cty + mpg$hwy
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2
mpg2$cthwAvg <- mpg2$cthwSum / 2
mpg2
mpg2 %>% arrange(cthwAvg)
mpg2
mpg2 %>% arrange(desc(cthwAvg)
mpg2 %>% arrange(desc(cthwAvg)
mpg2 %>% arrange(cthwAvg)
mpg2 %>% arrange(cthwAvg)
mpg2 <- mpg
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2$cthwAvg <- mpg2$cthwSum / 2
mpg2 %>% arrange(cthwAvg)
mpg2 %>% arrange(cthwAvg,decrecing =T)
mpg2
mpg2 %>% arrange(cthwAvg,decrecing =T)
mpg2 <- mpg
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2$cthwAvg <- mpg2$cthwSum / 2
mpg2 %>% arrange(cthwAvg,decrecing =T)
mpg2 %>% arrange(desc(cthwAvg))
hist(mpg2)
hist(mpg2,5)
hist(mpg2,5)
mpg2 %>% arrange(desc(cthwAvg))
head(mpg2,5)
head(mpg2,3)
mpg2 <- mpg
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg
library('ggplot2') #그래프를 이쁘게 할려고
mpg2 <- mpg
mpg2
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2$cthwAvg <- mpg2$cthwSum / 2
mpg2 %>% arrange(desc(cthwAvg))
head(mpg2,3)
mpg2 %>% arrange(desc(cthwAvg))
mpg2
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2
mpg2 <- mpg
mpg2
mpg2 <- mpg
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2$cthwAvg <- mpg2$cthwSum / 2
mpg2 %>% arrange(desc(cthwAvg))
head(mpg2,3)
mpg2 %>% arrange(desc(cthwAvg))
head(mpg2,3)
k1 <- mpg2 %>% arrange(desc(cthwAvg))
mpg2 %>% arrange(desc(cthwAvg))
mpg2
mpg2 <- mpg
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2$cthwAvg <- mpg2$cthwSum / 2
tmp <- mpg2 %>% arrange(desc(cthwAvg))
head(tmp,3)
mpg2$cthwAvg <- mpg2$cthwSum / 2
mpg3 <- mpg
mpg2$cthwSum <- mpg$cty + mpg$hwy %>% mpg2$cthwAvg <- mpg2$cthwSum / 2 %>% mpg2 %>% arrange(desc(cthwAvg)) %>% head(tmp,3)
mpg3$cthwSum <- mpg$cty + mpg$hwy %>% mpg3$cthwAvg <- mpg3$cthwSum / 2 %>% mpg3 %>% arrange(desc(cthwAvg)) %>% head(tmp,3)
mpg3$cthwSum <- mpg$cty + mpg$hwy %>% mpg3$cthwAvg <- mpg3$cthwSum / 2 %>% mpg3 %>% arrange(desc(cthwAvg)) %>% head(tmp,3)
mpg3 %>%
mutate(total = cty+hwy,
mean = total/2) %>%
arrange(desc(mean)) %>%
head(3)
source('C:/rproject/day03/r6.R', encoding = 'UTF-8', echo=TRUE)
mpg2 <- mpg
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2$cthwAvg <- mpg2$cthwSum / 2
tmp <- mpg2 %>% arrange(desc(cthwAvg))
head(tmp,3)
#q4
mpg3 <- mpg
mpg3 %>%
mutate(total = cty+hwy,
mean = total/2) %>%
arrange(desc(mean)) %>%
head(3)
mpg3 <-
mutate(total = cty+hwy,
mean = total/2)
mpg3 <-
mutate(total = cty+hwy,
mean = total/2)
mpg3 %>%   mutate(total = cty+hwy, mean = total/2)
mpg3
#q4
mpg3 <- mpg
mpg3
mpg3 %>%   mutate(total = cty+hwy, mean = total/2)
mpg3 %>%   arrange(desc(mean))
mpg3 %>%   arrange(desc(mean))
mpg3 %>%   arrange(desc(mean))
mpg3 %>%   arrange(desc(mean))
mpg2 <- mpg
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2$cthwAvg <- mpg2$cthwSum / 2
tmp
mpg2 %>% arrange(desc(cthwAvg))
mpg2 %>% arrange(desc(cthwAvg))
head(mpg2,3)
mpg2 <- mpg
mpg2$cthwSum <- mpg$cty + mpg$hwy
mpg2$cthwAvg <- mpg2$cthwSum / 2
mpg2 %>% arrange(desc(cthwAvg))
head(mpg2,3)
mpg3
#q4
mpg3 <- mpg
mpg3
mpg3 %>%   mutate(total = cty+hwy, mean = total/2)
mpg3
%>%   mutate(total = cty+hwy, mean = total/2)
mutate(total = cty+hwy, mean = total/2)
mpg3 %>%   mutate(total = cty+hwy, mean = total/2)
mpg3
mpg3 <- mpg3 %>%   mutate(total = cty+hwy, mean = total/2)
mpg3
mpg3 <- mpg3 %>%   mutate(total = cty+hwy, mean = total/2)
mpg3
#q4
mpg3 <- mpg
mpg3
mpg3 <- mpg3 %>%   mutate(total = cty+hwy, mean = total/2)
mpg3
mpg3 <- mpg3 %>%   arrange(desc(mean))
mpg3 %>%   arrange(desc(mean))
mpg3 %>%   arrange(desc(mean))
head(3)
mpg3 %>%   head(3)
exam
exam
exam
aggregate(math~class,dexam,mean)
exam
exam <- read.csv('csv_exam.csv');
exam <- read.csv('csv_exam.csv');
colnames(exam) <- c('id','class','math','english','science')
exam
aggregate(math~class,dexam,mean)
aggregate(math~class,exam,mean)
aggregate(math~class,exam,mean)
exam %>%
group_by(class) %>%
summarise(mean_math=mea(math))
exam %>%
group_by(class) %>%
summarise(mean_math=mean(math))
#위의 aggregate는 mean(3번째값1개함수)만 할 수 있는 반면, summarise는 함수를 다양하게 사용할 수 있다.
exam %>%
group_by(class) %>%
summarise(mean_math=mean(math),
sum_english = sum(english),
mean_science = mean(science),
n=n() #자동으로 count!!!
)
#위의 aggregate는 mean(3번째값1개함수)만 할 수 있는 반면, summarise는 함수를 다양하게 사용할 수 있다.
ex1 <- exam %>%
group_by(class) %>%
summarise(mean_math=mean(math),
sum_english = sum(english),
mean_science = mean(science),
n=n() #자동으로 group_by 행의갯수들을 count!!!
)
ex1
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty))
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty))
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty))
arrange(desc(mcty))
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty))
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty))
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty))
exam <- read.csv('csv_exam.csv');
colnames(exam) <- c('id','class','math','english','science')
exam
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty))
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty))
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty)) %>%
head(5)
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty)) %>%
head(5)
mpg
#150p
mpg  %>%
group_by(class)
#150p
mpg  %>%
group_by(class) %>%
summarise(mcty=mean(cty))
#150p
mpg  %>%
group_by(class) %>%
summarise(mcty=mean(cty)) %>%
arrange(desc(class))
mpg
mpg %>%
group_by(manufacturer) %>%
summarise(mhwy=mean(hwy)) %>%
arrange(desc(mhwy)) %>%
head(3)
#q4
mpg %>%
group_by(class) %>%
filter(class=="compact") %>%
n=n() %>%
arrange(n)
mpg %>%
group_by(class) %>%
mpg %>%
group_by(class)
mpg
mpg %>%
group_by(class) %>%
filter(class=="compact")
mpg %>%
group_by(class) %>%
filter(class=="compact") %>%
n=n()
mpg
mpg %>%
group_by(manufacturer) %>%
filter(class=="compact") %>%
n=n() %>%
arrange(n)
mpg %>%
group_by(manufacturer) %>%
filter(class=="compact")
mpg %>%
group_by(manufacturer) %>%
filter(class=="compact") %>%
n=n()
mpg %>%
group_by(manufacturer) %>%
filter(class=="compact") %>%
n=n()
mpg %>%
group_by(manufacturer) %>%
summarise(mean_math=mean(math),
filter(class=="compact"),
n=n()
)
mpg %>%
group_by(manufacturer) %>%
filter(class=="compact") %>%
summarise(compact,
n=n()
)
mpg %>%
group_by(manufacturer) %>%
filter(class=="compact") %>%
summarise(count = n()) %>%
arrange(desc(count))
mpg %>%
group_by(manufacturer) %>%
filter(class=="compact") %>%
summarise(count = n()) %>%
arrange(desc(count)
)
#위의 aggregate는 mean(3번째값1개함수)만 할 수 있는 반면, summarise는 함수를 다양하게 사용할 수 있다.
ex1 <- exam %>%
group_by(class) %>%
summarise(mean_math=mean(math),
sum_english = sum(english),
mean_science = mean(science),
n=n() #자동으로 group_by 행의갯수들을 count!!!
)
#p149p이랑 유사
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty)) %>%
head(5)
#p149p이랑 유사
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty)) %>%
head(5)
mpg %>%
group_by(manufacturer) %>%
filter(class=="compact") %>%
summarise(count = n()) %>%
arrange(desc(count)
)
mpg %>%
group_by(manufacturer) %>%
summarise(mhwy=mean(hwy)) %>%
arrange(desc(mhwy)) %>%
head(3)
#150p
mpg  %>%
group_by(class) %>%
summarise(mcty=mean(cty)) %>%
arrange(desc(class))
#150p
mpg  %>%
group_by(class) %>%
summarise(mcty=mean(cty)) %>%
arrange(desc(class))
#150p
mpg  %>%
group_by(class) %>%
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty))
#p149p이랑 유사
#q1
mpg %>%
group_by(manufacturer,drv) %>%  #제조사별, 드라이버별 그룹
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty)) %>%
head(5)
#150p
#q2
mpg  %>%
group_by(class) %>%
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty))
#150p
#q1
mpg %>%
group_by(class) %>%
summarise(mcty=mean(cty))
#150p
#q1
mpg %>%
group_by(class) %>%
summarise(mcty=mean(cty))
#q2
mpg  %>%
group_by(class) %>%
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty))
mmpg1 <- aggregate(cty~class,mpg,mean)
mmpg1[order(mmpg1$cty,decreasing = T),]
mmpg2 <- aggregate(hwy~manufacturer,mpg,mean)
head(mmpg2[order(mmpg2$hwy,decreasing = T),],3)
mmpg3 <- mpg[mpg$class %in% c('compact'),]
sort(table(mmpg3$manufacturer),decreasing = T)
mpg %>%
group_by(manufacturer) %>%
filter(class=="compact") %>%
summarise(count = n()) %>%
arrange(desc(count)
)
mpg %>%
group_by(manufacturer) %>%
summarise(mhwy=mean(hwy)) %>%
arrange(desc(mhwy)) %>%
head(3)
head(mmpg2[order(mmpg2$hwy,decreasing = T),],3)
#q2
mmpg1 <- aggregate(cty~class,mpg,mean)
mmpg1[order(mmpg1$cty,decreasing = T),]
#q2
mpg  %>%
group_by(class) %>%
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty))
#q3
mpg
#q2
mpg  %>%
group_by(class) %>%
summarise(mcty=mean(cty)) %>%
arrange(desc(mcty))
colMeans(st[,c('ko','en','ma')],na.rm =T)
avg = colMeans(st[,c('ko','en','ma')],na.rm =T)
