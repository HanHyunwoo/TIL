tf <- data.frame(
id = c(1:5)
test=c(86:90)
)
tf <- data.frame(
id = c(1:5),
test=c(86:90)
)
tf
tf2 <- data.frame(
id = c(6:10),
test=c(91:95)
)
total <- rbind(tf,tf2)
total <- rbind(tf,tf2)
total
total$test2 <- c(90:99)
total$avg <- (total$test + total$test2)/2
total
total %>% head(5)
total %>%
group_by(total$avg) %>%
head(5)
# 평균이 높은 순으로 탑3을 조회 하시오
library(dplyr)
library(dplyr)
library(sqldf)
total %>%
group_by(total$avg) %>%
head(5)
total %>%
group_by(total$avg) %>%
head(3)
total %>%
group_by(total$avg) %>%
arrange(desc(avg))
total %>%
group_by(total$avg) %>%
arrange(desc(avg))
total %>%
group_by(total$avg) %>%
arrange(desc(avg)) %>%
head(3)
head(total[order(total$avg,decreasing = T),],3)
total[total$avg >= mean(total$avg),]
library(ggplot2)
#160p
midwest  #ggplot2에서 기본 제공하는 데이터
class(midwest)
popadults
j1 <- midwest$popadults
j1
midwest
j1 <- (midwest$popadults+midwest$poptotal)/midwest$popadults*100
j1 <- midwest
j1 <- midwest
j1 <- midwest
j1$add <- (midwest$popadults+midwest$poptotal)/midwest$popadults*100
j1
tmp <- midwest[,c('popadults')]
tmp
tmp2 <- midwest[,c('poptotal')]
tmp2
tmp3 <- (tmp2$poptotal-tmp$popadults)/tmp2$poptotal*100
tmp3
tmp <- midwest
tmp$child <- (tmp2$poptotal-tmp$popadults)/tmp2$poptotal*100
imsi <- tmp[,c('popadults','poptotal','child')]
imsi
imsi <- tmp[,c('popadults','poptotal','child','couhtry')]
imsi <- tmp[,c('popadults','poptotal','child','country')]
imsi <- tmp[,c('popadults','poptotal','child','county')]
imsi
imsi %>%
arrange(child) %>%
head(5)
imsi %>%
arrange(child) %>%
arrange(desc(child))
imsi %>%
arrange(child) %>%
arrange(desc(child)) %>%
head(5)
imsi %>%
arrange(child) %>%
arrange(desc(child)) %>%
head(5)
imsi <- tmp[,c('county','child','popadults','poptotal',)]
imsi <- tmp[,c('county','child','popadults','poptotal')]
imsi %>%
arrange(child) %>%
arrange(desc(child)) %>%
head(5)
imsi <- tmp[,c('county','child')]
imsi %>%
arrange(child) %>%
arrange(desc(child)) %>%
head(5)
imsi <- tmp[,c('county','child'),'popadults','poptotal']
imsi <- tmp[,c('county','child','popadults','poptotal')]
imsi %>%
arrange(child) %>%
arrange(desc(child)) %>%
head(5)
imsi <- tmp[,c('county','child')]
imsi %>%
arrange(child) %>%
arrange(desc(child)) %>%
head(5)
imsi <- tmp[,c('county','child',popadults','poptotal')]
imsi <- tmp[,c('county','child','popadults','poptotal')]
imsi %>%
arrange(child) %>%
arrange(desc(child)) %>%
head(5)
imsi %>%
arrange(child) %>%
group_by(county,child) %>%
arrange(desc(child)) %>%
head(5)
imsi %>%
arrange(child) %>%
arrange(desc(child)) %>%
head(5)
imsi <- tmp[,c('county','child','popadults','poptotal')]
imsi %>%
arrange(child) %>%
arrange(desc(child)) %>%
head(5)
midwest$popjuni <- 100-(midwest$popadults/midwest$poptotal*100)
head(midwest)
head(midwest$popjuni)
midwest$grade <- ifelse(midwest$popjuni>=40, 'large',
ifelse(midwest$popjuni<30,'small',middle))
midwest$grade <- ifelse(midwest$popjuni>=40, 'large',
ifelse(midwest$popjuni<30,'small','middle'))
midwest$popasianrate <- (midwest$popasian/midwest$poptotal*100)
head(midwest[order(popasianrate),c('state','county','popasianrate')],10)
midwest$popasianrate <- (midwest$popasian/midwest$poptotal*100)
head(midwest[order(midwest$popasianrate),c('state','county','popasianrate')],10)
midwest$popasianrate <- (midwest$popasian/midwest$poptotal*100)
head(midwest[order(midwest$popasianrate),c('state','county','popasianrate')],10)
st <- read.csv('csv_exam.csv',header = F)
st
view(st)
view(st)
view('st')
View(st)
is.na(st)
table(is.na(st))
colnames(st) <- c('id','class','ko','en','ma')
table(is.na(st)) # NA true, false 개수가 나온다.
is.na(st)
table(is.na(st)) # NA true, false 개수가 나온다.
table(is.na(st$class)) # NA true, false 개수가 나온다.
mean(st$ko)
mean(st$ko,na.rm=T)
mean(st$ko,na.rm=T) #NA를 제외한 숫자만 가지고 평균을 구한다.
mean(st$ko) #NA가 있어서 안된다.
mean(st$ko,na.rm=T) #NA를 제외한 숫자만 가지고 평균을 구한다.
tmp <- st
tmp
tmp[,c(1:3)]
# 학생 정보를 조회 하시오
# 단 id, class, ko 결측치(NA)가 있는 학생은 빼시오
tmp <- st[,c(1:3)]
tmp
tmp[,is.na(tmp$ko)]
tmp[,tmp$ko==is.na(tmp$ko)]
st[!is.na(st$ko) & !is.na(st$class), c('id','class','kko')]
st[!is.na(st$ko) & !is.na(st$class), c('id','class','ko')]
# 학생 정보를 조회 하시오
# 단 id, class, ko 결측치(NA)가 있는 학생은 빼시오
tmp <- st[,c(1:3)]
tmp
st[!is.na(st$ko) & !is.na(st$class), c('id','class','ko')]
na.omit(st[,c('id','class','ko')])
st[!is.na(st$ko) & !is.na(st$class), c('id','class','ko')]
na.omit(st[,c('id','class','ko')])
st[,c(1:3)]
st[!is.na(st$ko) & !is.na(st$class), c('id','class','ko')]
na.omit(st[,c('id','class','ko')])  #na.omit 모든 결측치를 빼겠다.
na.omit(st[,c('id','class','ko')])  #na.omit 모든 결측치를 빼겠다.
# 국어, 영어, 수학 성적의 평균을 구하여
# vector 를 만든다.
imsi <- na.omit(st[,c('id','class','ko','en','ma')]
imsi
# 국어, 영어, 수학 성적의 평균을 구하여
# vector 를 만든다.
imsi <- na.omit(st[,c('id','class','ko')]
# 국어, 영어, 수학 성적의 평균을 구하여
# vector 를 만든다.
imsi <- na.omit(st[,c('id','class','ko','en','ma')]
View(st)
# 국어, 영어, 수학 성적의 평균을 구하여
# vector 를 만든다.
imsi <- na.omit(st[,c('id','class','ko','en','ma')]
# 국어, 영어, 수학 성적의 평균을 구하여
# vector 를 만든다.
imsi <- na.omit(st[,c('id','class','ko','en','ma')]
# 국어, 영어, 수학 성적의 평균을 구하여
# vector 를 만든다.
imsi <- na.omit(st[,c('id','class','ko','en','ma')]
# 국어, 영어, 수학 성적의 평균을 구하여
# vector 를 만든다.
imsi <- na.omit(st[,c('id','class','ko','en','ma')]
imsi <- na.omit(st[,c('id','class','ko','en','ma')]
imsi
na.omit(st[,c('id','class','ko','en','ma')]
st[!is.na(st$ko) & !is.na(st$class), c('id','class','ko')]
na.omit(st[,c('id','class','ko')])  #na.omit 모든 결측치를 빼겠다.
# 국어, 영어, 수학 성적의 평균을 구하여
# vector 를 만든다.
imsi <- na.omit(st[,c('id','class','ko')])  #na.omit 모든 결측치를 빼겠다.
st
# 국어, 영어, 수학 성적의 평균을 구하여
# vector 를 만든다.
imsi <- na.omit(st[,c('id','class','ko','en','ma')])
# 국어, 영어, 수학 성적의 평균을 구하여
# vector 를 만든다.
imsi <- na.omit(st[,c('id','class','ko','en','ma')])
imsi
avg = colMeans(st[,c('ko','en','ma')],na.rm =T)
avg
# NA값을 모두 0으로 바꾸시오.
ST
# NA값을 모두 0으로 바꾸시오.
st
st[is.na(st)] <- 0
st
st <- read.csv('csv_exam.csv',header = F)
colnames(st) <- c('id','class','ko','en','ma')
# NA값을 모두 0으로 바꾸시오.
st
notNA <- st[is.na(st)] <- 0
notNA
notNA
st[is.na(st)] <- 0
st
notNA <- st[is.na(st)] <- 0
notNA <- st[is.na(st)] <- 0
notNA
st[is.na(st)] <- 0
st
st <- read.csv('csv_exam.csv',header = F)
colnames(st) <- c('id','class','ko','en','ma')
# NA값을 모두 0으로 바꾸시오.
st
notNA <-st
notNA
notNA[is.na(notNA)] <- 0
notNA
st$ma <- ifelse(is.na(st$ma),0,st$ma)
st$ko <- ifelse(is.na(st$ko),0,st$ko)
st$en <- ifelse(is.na(st$en),0,st$en)
st$ma <- ifelse(is.na(st$ma),0,st$ma)
st$ko <- ifelse(is.na(st$ko),0,st$ko)
st$en <- ifelse(is.na(st$en),0,st$en)
st$ma <- ifelse(is.na(st$ma),0,st$ma)
notNA[is.na(notNA)] <- 1
boxlot(notNA)
boxplot(notNA)
st$ko <- ifelse(is.na(st$ko),0,st$ko)
st$en <- ifelse(is.na(st$en),0,st$en)
st$ma <- ifelse(is.na(st$ma),0,st$ma)
st[is.na(st)] <- 1
boxplot(st)
boxplot(st)
hist(st)
st$ko <- ifelse(is.na(st$ko),0,st$ko)
st$en <- ifelse(is.na(st$en),0,st$en)
st$ma <- ifelse(is.na(st$ma),0,st$ma)
notNA[is.na(notNA)] <- 1
st[is.na(st)] <- 1
boxplot(st)
hist(st)
st[is.na(st)] <- 1
st
st
st[is.na(st)] <- 1
st
st <- read.csv('csv_exam.csv',header = F)
colnames(st) <- c('id','class','ko','en','ma')
st[is.na(st)] <- 1
st
boxplot(st)
st[is.na(st)] <- 1
st
boxplot(st)
boxplot(st$ko)
notNA[is.na(notNA)] <- 1
notNA
hist(st$en)
boxplot(st$en)
