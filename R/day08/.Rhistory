dbDisconnect(conn)  #db연결 끊기
library(rJava)
library(RJDBC)
library(DBI)
library(sqldf)
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@localhost:1521:XE';
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
#3. Statement
sqlstr <- 'SELECT * FROM EMP';
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
emp
#3. Statement
sqlstr <- 'SELECT MGR FROM EMP';
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
emp
sqlstr <- 'SELECT MGR FROM EMP';
#3. Statement
sqlstr <- 'SELECT * FROM EMP';
emp <- dbGetQuery(conn,sqlstr)
emp
sqlstr <- 'SELECT * FROM EMP';
hire <- 'SELECT HIREDATE FROM EMP';
hire
sqlstr <- 'SELECT month_between(sysdate,hiredate) FROM EMP';
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
sqlstr <- 'SELECT month_between(sysdate,hiredate) as day, SAL FROM EMP';
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
sqlstr <- 'SELECT months_between(sysdate,hiredate) as day, SAL FROM EMP';
library(ggplot2)
ggplot(date=emp,aes(x=day,y=sal)) + geom_line()
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@localhost:1521:XE';
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
#3. Statement
#emp회사의 근속 연수(오늘날짜기준 일)와 월급의 상관 관계를 그래프로 표현 하시오.
sqlstr <- 'SELECT months_between(sysdate,hiredate) as day, SAL FROM EMP';
library(ggplot2)
ggplot(date=emp,aes(x=day,y=sal)) + geom_line()
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
emp
ggplot(date=emp,aes(x=day,y=sal)) + geom_line()
emp <- dbGetQuery(conn,sqlstr)
ggplot(date=emp,aes(x=day,y=sal)) + geom_line()
sqlstr <- 'SELECT months_between(sysdate,hiredate) as day, SAL FROM EMP';
ggplot(date=emp,aes(x=day,y=sal)) + geom_line()
ggplot(date=emp,aes(x=day,y=sal)) + geom_line()
ggplot(date=emp,aes(x=emp$mon,y=emp$sal)) + geom_line()
library(ggplot2)
ggplot(date=emp,aes(x=emp$mon,y=emp$sal)) + geom_line()
ggplot(data=emp,aes(x=emp$mon,y=emp$sal))+geom_line()
ggplot(data=emp,aes(x=emp$mon,y=emp$sal))+geom_line()
ggplot(data=iris,aes(x=sl,y=pl))+geom_line()
#3. Statement
#emp회사의 근속 연수(오늘날짜기준 월)와 월급의 상관 관계를 그래프로 표현 하시오.
sqlstr <- 'SELECT round(months_between(sysdate,hiredate),0) as mon, SAL FROM EMP';
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
#5. Close
dbDisconnect(conn)  #db연결 끊기
library(ggplot2)
ggplot(date=emp,aes(x=emp$mon,y=emp$sal)) + geom_line()
library(ggplot2)
ggplot(date=emp,aes(x=emp$MON,y=emp$SAL))+geom_line()
library(rJava)
library(RJDBC)
library(DBI)
library(sqldf)
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@localhost:1521:XE';
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
#3. Statement
#emp회사의 근속 연수(오늘날짜기준 월)와 월급의 상관 관계를 그래프로 표현 하시오.
sqlstr <- 'SELECT round(months_between(sysdate,hiredate),0) as mon, SAL FROM EMP';
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
#5. Close
dbDisconnect(conn)  #db연결 끊기
library(ggplot2)
ggplot(date=emp,aes(x=emp$MON,y=emp$SAL))+geom_line()
emp <- dbGetQuery(conn,sqlstr)
emp <- dbGetQuery(conn,sqlstr)
library(rJava)
library(RJDBC)
library(DBI)
library(sqldf)
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@localhost:1521:XE';
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
#3. Statement
#emp회사의 근속 연수(오늘날짜기준 월)와 월급의 상관 관계를 그래프로 표현 하시오.
sqlstr <- 'SELECT round(months_between(sysdate,hiredate),0) as mon, SAL FROM EMP';
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
library(ggplot2)
ggplot(date=emp,aes(x=emp$MON,y=emp$SAL))+geom_line()
#5. Close
dbDisconnect(conn)  #db연결 끊기
ggplot(date=emp,aes(x=emp$MON,y=emp$SAL))+geom_line()
ggplot(date=emp,aes(x=emp$MON,y=emp$SAL))+geom_line()
ggplot(date=emp,aes(x=MON,y=SAL))+geom_line()
library(ggplot2)
ggplot(date=emp,aes(x=MON,y=SAL))+geom_line()
emp
library(rJava)
library(RJDBC)
library(DBI)
library(sqldf)
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@localhost:1521:XE';
#1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
#3. Statement
#emp회사의 근속 연수(오늘날짜기준 월)와 월급의 상관 관계를 그래프로 표현 하시오.
sqlstr <- 'SELECT round(months_between(sysdate,hiredate),0) as mon, SAL FROM EMP';
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
#k <- sqldf('select SYSDATE from d')
#5. Close
dbDisconnect(conn)  #db연결 끊기
library(ggplot2)
ggplot(date=emp,aes(x=MON,y=SAL))+geom_line()
ggplot(data = emp, aex(x=MON, y=SAL)) + geom_line()
ggplot(data = emp, aes(x=MON, y=SAL)) + geom_line()
ggplot(date = emp, aes(x=MON, y=SAL)) + geom_line()
ggplot(data = emp, aes(x=MON, y=SAL)) + geom_line()
ggplot(data = emp, aes(x=emp$MON, y=SAL)) + geom_line()
ggplot(data = emp, aes(x=MON, y=SAL)) + geom_line()
emp
ggplot(data,aes(x=MON,y=SAL))+ geom_line() + geom_point() +
geom_line() +geom_point() +
geom_line(data = data2,aes(x=mon,y=sal/2),colour="red") +
geom_point(data=data2,aes(x=mon,y=sal/2),colour="red")
data2 <= data*2
emp2 <= emp*2
emp
emp*2
emp2 <= emp*2
emp*2
emp2 <- emp*2
ggplot(emp,aes(x=MON,y=SAL))+ geom_line() + geom_point() +
geom_line() +geom_point() +
geom_line(data = emp2,aes(x=mon,y=sal/2),colour="red") +
geom_point(data=emp2,aes(x=mon,y=sal/2),colour="red")
ggplot(emp,aes(x=MON,y=SAL))+ geom_line() + geom_point() +
geom_line() +geom_point() +
geom_line(data = emp2,aes(x=MON,y=SAL/2),colour="red") +
geom_point(data=emp2,aes(x=MON,y=SAL/2),colour="red")
ggplot(data = emp, aes(x=MON, y=SAL)) + geom_line()
#----------------------------------------------------------------------
ggplot(emp,aes(x=MON,y=SAL))+ geom_line() + geom_point() +
geom_line() +geom_point() +
geom_line(data = emp2,aes(x=MON,y=SAL/2),colour="red") +
geom_point(data=emp2,aes(x=MON/2,y=SAL),colour="red")
#----------------------------------------------------------------------
ggplot(emp,aes(x=MON,y=SAL))+ geom_line() + geom_point() +
geom_line() +geom_point() +
geom_line(data = emp2,aes(x=MON/2,y=SAL),colour="red") +
geom_point(data=emp2,aes(x=MON/2,y=SAL),colour="red")
#----------------------------------------------------------------------
ggplot(emp,aes(x=MON,y=SAL))+ geom_line() + geom_point() +
geom_line() +geom_point() +
geom_line(data = emp2,aes(x=MON/2,y=SAL),colour="red") +
geom_point(data=emp2,aes(x=MON/2,y=SAL),colour="red")
data
emp2
#----------------------------------------------------------------------
ggplot(emp,aes(x=MON,y=SAL))+ geom_line() + geom_point() +
geom_line() +geom_point() +
geom_line(data = emp2,aes(x=MON,y=SAL),colour="red") +
geom_point(data=emp2,aes(x=MON,y=SAL),colour="red")
/2
#----------------------------------------------------------------------
ggplot(emp,aes(x=MON,y=SAL))+ geom_line() + geom_point() +
geom_line() +geom_point() +
geom_line(data = emp2,aes(x=MON/2,y=SAL),colour="red") +
geom_point(data=emp2,aes(x=MON/2,y=SAL),colour="red")
kk <- 'select * from RegistrationCount;'
kk2 <- dbGetQuery(conn,kk)
kk <- 'select * from RegistrationCount;'
kk2 <- dbGetQuery(conn,kk)
kk2 <- dbGetQuery(conn,kk)
library(rJava)
library(RJDBC)
library(DBI)
library(sqldf)
#----------------------------------------------------------------------
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@localhost:1521:XE';
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
sqlstr <- 'select * from RegistrationCount';
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
re
sqlstr <- 'select region,2015,2016,2017 from RegistrationCount';
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
#5. Close
dbDisconnect(conn)  #db연결 끊기
library(ggplot2)
re
sqlstr <- 'select region,"2015","2016","2017" from RegistrationCount';
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
#----------------------------------------------------------------------
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@localhost:1521:XE';
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
sqlstr <- 'select region,"2015","2016","2017" from RegistrationCount';
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
re
library(ggplot2)
ggplot(data = re, aes(x=re$REGION, y=re$`2015`)) + geom_line()
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@localhost:1521:XE';
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
sqlstr <- 'SELECT round(months_between(sysdate,hiredate),0) as mon, SAL FROM EMP';
#4. ResultSet
emp <- dbGetQuery(conn,sqlstr)
#5. Close
dbDisconnect(conn)  #db연결 끊기
library(ggplot2)
ggplot(data = emp, aes(x=MON, y=SAL)) + geom_line()
emp
ggplot(data = re, aes(x=re$REGION, y=re$`2015`)) + geom_line()
ggplot(data = re, aes(x=re$REGION, y=re$`2015`)) + geom_line()
sqlstr <- 'select region,"2015" from RegistrationCount';
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
library(rJava)
library(RJDBC)
library(DBI)
library(sqldf)
#----------------------------------------------------------------------
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@localhost:1521:XE';
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
sqlstr <- 'select region,"2015" from RegistrationCount';
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
library(ggplot2)
ggplot(data = re, aes(x=re$REGION, y=re$`2015`)) + geom_line()
re
ggplot(data = re, aes(x=re$REGION, y=re$`2015`)) + geom_point()
ggplot(data = re, aes(x=re$REGION, y=re$`2015`)) + geom_point()
ggplot(data = re, aes(x=REGION, y=`2015`)) + geom_point()
ggplot(data = re, aes(x=REGION, y=`2015`)) + geom_point()
ggplot(data = re, aes(x=REGION, y=`2015`)) + geom_point()
geom_point(data=re,aes(x=REGION,y=2016'),colour="red")
geom_line() + geom_point() +
geom_line(data=re,aes(x=REGION,y='2016'),colour="red") +
geom_point(data=re,aes(x=REGION,y='2016'),colour="red")
geom_line() + geom_point() +
geom_line(data=re,aes(x=REGION,y='2016'),colour="red") +
geom_point(data=re,aes(x=REGION,y='2016'),colour="red")
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
ggplot(data = re, aes(x=REGION, y=`2015`)) + geom_point()
geom_line() + geom_point() +
geom_line(data=re,aes(x=REGION,y='2016'),colour="red") +
geom_point(data=re,aes(x=REGION,y='2016'),colour="red")
ggplot(re, aes(x=REGION, y=`2015`)) + geom_line()+ geom_point() +
geom_line() + geom_point() +
geom_line(data=re,aes(x=REGION,y='2016'),colour="red") +
geom_point(data=re,aes(x=REGION,y='2016'),colour="red")
ggplot(re, aes(x=REGION, y=`2015`)) + geom_line()+ geom_point() +
geom_line() + geom_point() +
geom_line(data=re,aes(x=REGION,y='2016'),colour="red") +
geom_point(data=re,aes(x=REGION,y='2016'),colour="red")
re
sqlstr <- 'select region,"2015","2016","2017" from RegistrationCount';
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
library(ggplot2)
re
ggplot(re, aes(x=REGION, y=`2015`)) + geom_line()+ geom_point() +
geom_line() + geom_point() +
geom_line(data=re,aes(x=REGION,y='2016'),colour="red") +
geom_point(data=re,aes(x=REGION,y='2016'),colour="red")
ggplot(re, aes(x=REGION, y=2015)) + geom_line()+ geom_point() +
geom_line() + geom_point() +
geom_line(data=re,aes(x=REGION,y='2016'),colour="red") +
geom_point(data=re,aes(x=REGION,y='2016'),colour="red")
ggplot(re, aes(x=REGION, y=2015)) + geom_line()+ geom_point() +
geom_line() + geom_point() +
geom_line(data=re,aes(x=REGION,y=2016),colour="red") +
geom_point(data=re,aes(x=REGION,y=2016),colour="red")
re
library(rJava)
library(RJDBC)
library(DBI)
library(sqldf)
library(rJava)
library(RJDBC)
library(DBI)
library(rJava)
library(RJDBC)
library(DBI)
drvName <- 'org.apache.hive.jdbc.HiveDriver';
id <- 'root';
pwd <- '111111';
url <- 'jdbc:hive2://192.168.111.100:10000';
hive_lib <- 'c:\\java_hive_lib'
.jinit();               #클래스패스에 지정
.jaddClassPath(dri(hive_lib,full.names=T));
.jclassPath();
#1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath = 'hive-jdbc-1.0.1.jar')
library(rJava)
library(RJDBC)
library(DBI)
drvName <- 'org.apache.hive.jdbc.HiveDriver';
id <- 'root';
pwd <- '111111';
url <- 'jdbc:hive2://192.168.111.100:10000';
hive_lib <- 'c:\\java_hive_lib'
.jinit();               #클래스패스에 지정
.jaddClassPath(dri(hive_lib,full.names=T));
library(rJava)
library(RJDBC)
library(DBI)
drvName <- 'org.apache.hive.jdbc.HiveDriver';
id <- 'root';
pwd <- '111111';
url <- 'jdbc:hive2://192.168.111.100:10000';
hive_lib <- 'c:\\java_hive_lib'
.jinit();               #클래스패스에 지정
.jaddClassPath(dir(hive_lib,full.names=T));
.jclassPath();
drv <- JDBC(driverClass = drvName,
classPath = 'hive-jdbc-1.0.1.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
sqlstr <- 'SELECT * from airline_delay LIMIT 10';
air <- dbGetQuery(conn,sqlstr)
air
getDel <- function(){
library(rJava)
library(RJDBC)
library(DBI)
library(sqldf)
#----------------------------------------------------------------------
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@70.12.114.144:1521:XE';
#1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
#3. Statement
#emp회사의 근속 연수(오늘날짜기준 월)와 월급의 상관 관계를 그래프로 표현 하시오.
sqlstr <- 'select region,"2015","2016","2017" from RegistrationCount';
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
}
getDel <- function(){
library(rJava)
library(RJDBC)
library(DBI)
library(sqldf)
#----------------------------------------------------------------------
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@70.12.114.144:1521:XE';
#1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
#3. Statement
#emp회사의 근속 연수(오늘날짜기준 월)와 월급의 상관 관계를 그래프로 표현 하시오.
sqlstr <- 'select * FROM food';
#4. ResultSet
re <- dbGetQuery(conn,sqlstr)
}
source('C:/TIL/R/day08/team.R', encoding = 'UTF-8')
re
getWeather <- function(){
library(rJava)
library(RJDBC)
library(DBI)
drvName <- 'org.apache.hive.jdbc.HiveDriver';
id <- 'root';
pwd <- '111111';
url <- 'jdbc:hive2://192.168.111.100:10000';
hive_lib <- 'c:\\java_hive_lib'
.jinit();               #클래스패스에 지정
.jaddClassPath(dir(hive_lib,full.names=T));
.jclassPath();
#1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath = 'hive-jdbc-1.0.1.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
#3. Statement
sqlstr <- 'SELECT * from airline_delay LIMIT 10';
#4. ResultSet
air <- dbGetQuery(conn,sqlstr)
#5. Close
dbDisconnect(conn)  #db연결 끊기
}
getWeather <- function(){
library(rJava)
library(RJDBC)
library(DBI)
drvName <- 'org.apache.hive.jdbc.HiveDriver';
id <- 'root';
pwd <- '111111';
url <- 'jdbc:hive2://192.168.111.100:10000';
hive_lib <- 'c:\\java_hive_lib'
.jinit();               #클래스패스에 지정
.jaddClassPath(dir(hive_lib,full.names=T));
.jclassPath();
#1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath = 'hive-jdbc-1.0.1.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
#3. Statement
sqlstr <- 'SELECT * from weather';
#4. ResultSet
weather <- dbGetQuery(conn,sqlstr)
#5. Close
dbDisconnect(conn)  #db연결 끊기
return(weather)
}
getWeather()
getDel <- function(){
library(rJava)
library(RJDBC)
library(DBI)
library(sqldf)
#----------------------------------------------------------------------
drvName <- 'oracle.jdbc.driver.OracleDriver';
id <- 'ruser';
pwd <- 'ruser';
url <- 'jdbc:oracle:thin:@70.12.114.144:1521:XE';
#1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
#2. Connection
conn <- dbConnect(drv,url,id,pwd)
#3. Statement
#emp회사의 근속 연수(오늘날짜기준 월)와 월급의 상관 관계를 그래프로 표현 하시오.
sqlstr <- 'select * FROM food';
#4. ResultSet
food <- dbGetQuery(conn,sqlstr)
#5. Close
dbDisconnect(conn)  #db연결 끊기
return(food)
}
getDel()
getDel()
